const float Eta = 0.66;
const float FresnelPower = 5.0;
const float F = ((1.0-Eta)*(1.0-Eta))/((1.0+Eta)*(1.0+Eta));

varying vec3 MCposition;
varying float height;
varying float cheight;
varying float dist;

varying vec3 Reflect;
varying vec3 Refract;
varying float Ratio;
varying float fogint;
varying vec3 deltaSD;

uniform float radius;
uniform vec3 camera;
uniform vec3 sundir;

void main()
{
	MCposition = gl_Vertex.xyz - camera;
	height = length(MCposition) - radius;
	cheight = length(camera) - radius;
	dist = length(gl_Vertex.xyz);
	
	vec4 ecPosition = (gl_Vertex - vec4(camera, 0.0));
	vec3 ecPosition3 = ecPosition.xyz/ecPosition.w;
		
	vec3 i = normalize(ecPosition3);
	vec3 n = normalize(((gl_Vertex - vec4(camera, 0.0))).xyz);
	Ratio = F + (1.0 - F)*pow((1.0 - dot(-i, n)), FresnelPower);
		
	Refract = refract(i, n, Eta);
	
	Reflect = reflect(i, n);
	
	fogint = clamp(dist/200000.0, 0.0, 0.7);
	
	vec3 normvert = normalize(gl_Vertex.xyz);
	
	deltaSD = (sundir - normvert);
	
	gl_Position = ftransform();
}
