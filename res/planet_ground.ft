varying vec3 MCposition;
varying float height;
varying float cheight;
varying float dist;
varying float fogint;
varying vec3 deltaSD;
varying float depth;
varying vec3 tex_coord;

uniform sampler3D tex_0;

uniform sampler2D tex_1;
uniform sampler2D tex_2;
uniform sampler2D tex_3;
uniform sampler2D tex_4;

uniform sampler2D tex_5;

void main()
{
	vec2 texcoord = (MCposition.xy + MCposition.xz + MCposition.yz)/3.0;
	vec4 dirt1 = texture2D(tex_1, tex_coord.xy);
	vec4 grass1 = texture2D(tex_2, tex_coord.xy);
	vec4 rock1 = texture2D(tex_3, tex_coord.xy);
	vec4 snow1 = texture2D(tex_4, tex_coord.xy);
	
	vec4 noise = texture3D(tex_0, tex_coord.xyz*2.0);
	
	float rand = abs(noise[0] - 0.25) +
			     abs(noise[1] - 0.125) + 
		    	 abs(noise[2] - 0.0625) + 
				 abs(noise[3] - 0.03125);
					 
	float intensity0 = clamp(rand*abs(min(height - 100.0, 0.0)), 0.0, 1.0);
	float intensity1 = clamp(rand*max(height - 9000.0, 0.0)/20.0, 0.0, 1.0);
	float intensity2 = clamp(rand*max(height - 10000.0, 0.0)/20.0, 0.0, 1.0);
	
	vec4 color1 = mix(dirt1, grass1, 1.0 - intensity0);
	vec4 color2 = mix(color1, rock1, intensity1);
	vec4 color3 = mix(color2, snow1, intensity2);
	
	float d = dist;
	if (height < 0.0)
	{
		color3 = mix(color3, vec4(0.4, 0.5, 1.0, 1.0), clamp(max(dist, 0.0)/1000.0, 0.0, 1.0));
		color3 = mix(color3, vec4(0.0, 0.0, 0.0, 1.0), clamp(max(-height + d/6.0, 0.0)/400.0, 0.0, 1.0));
	}
	
	if (cheight < 0.0)
	{
		color3 = mix(color3, vec4(0.025, 0.03, 0.06125, 1.0), clamp(max(dist - 40000.0, 0.0)/200000.0, 0.0, 1.0));
	}
	
	float fog = fogint;
	
	if (height < 0.0)
		fog = 0.0;	
	vec4 fogcolor = texture2D(tex_5, vec2(max(dot(deltaSD, deltaSD), 0.1), 0.0))*0.7 + vec4(1.0, 1.0, 1.0, 1.0)*0.3;
		
	gl_FragColor = vec4(color3.rgb, 1.0);
}
